{"version":3,"sources":["static/images/Portfolio-2.png","components/Lists/index.js","components/Navigation/index.js","components/HomePage/index.js","containers/Home/index.js","components/About/index.js","containers/Profile/index.js","components/Projects/index.js","containers/Work/index.js","components/Cards/index.js","containers/Skills/index.js","components/Resume/index.js","App.js","serviceWorker.js","index.js","../node_modules/pdfjs-dist/build sync","static/images/pp.jpg","static/images/Bookstore.png","static/images/covid19.png","static/images/aio-bot.png","static/images/portfolio.png"],"names":["module","exports","Links","routes","li","style","verticalAlign","iconColor","List","map","text","index","to","display","textDecoration","ListItem","button","key","ListItemIcon","Icon","color","ListItemText","primary","useStyles","makeStyles","theme","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","width","marginLeft","easeOut","enteringScreen","menuButton","marginRight","spacing","hide","drawer","flexShrink","drawerPaper","backgroundColor","drawerHeader","alignItems","padding","mixins","toolbar","justifyContent","brandName","fontSize","textAlign","fontFamily","divider","social","socialColor","socialLink","socialList","Navigation","classes","useTheme","React","useState","open","setOpen","CssBaseline","AppBar","position","className","clsx","Toolbar","IconButton","aria-label","onClick","edge","Typography","variant","noWrap","id","Drawer","anchor","paper","direction","Divider","Lists","href","target","useStyle","root","height","info","top","left","transform","svg","margin","icon","cursor","large","border","Home","Box","Avatar","alt","src","section","header","fontWeight","grids","avatar","img","boxShadow","lists","listStyle","faIcons","btn","MyAbout","Container","fixed","component","Button","Profile","maxWidth","minWidth","minHeight","media","link","Projects","props","Card","CardActionArea","CardMedia","image","title","CardContent","gutterBottom","para","CardActions","size","view","flexGrow","item","Work","Grid","container","xs","portfolio","bookstore","covid19","chatbot","portfolio2","circle","borderRadius","typo","fontStyle","Cards","comp","code","Skills","data","canvas","Resume","download","file","pageNumber","PersistentDrawerLeft","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","webpackEmptyContext","req","e","Error","keys","resolve"],"mappings":"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","file":"static/js/main.1b56f644.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Portfolio-2.18229fae.png\";","/**\n *\n * Links\n *\n */\n\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { List, ListItem, ListItemIcon, ListItemText } from '@material-ui/core';\nimport Icon from '@material-ui/core/Icon';\nimport { FaHome, FaIdBadge, FaTasks, FaFolderOpen } from 'react-icons/fa';\n\nfunction Links() {\n  const routes = ['/Portfolio-ReactJs/', '/Portfolio-ReactJs/profile', '/Portfolio-ReactJs/skills', '/Portfolio-ReactJs/work'];\n  const li = [\n    <FaHome style={{ verticalAlign: 'top' }} />,\n    <FaIdBadge style={{ verticalAlign: 'top' }} />,\n    <FaTasks style={{ verticalAlign: 'top' }} />,\n    <FaFolderOpen style={{ verticalAlign: 'top' }} />,\n  ];\n  const iconColor = ['violet', 'lightgreen', 'skyblue', 'yellow'];\n  return (\n    <List>\n      {['Home', 'Profile', 'Skills', 'Work'].map((text, index) => (\n        <Link\n          to={routes[index]}\n          style={{ display: 'block', textDecoration: 'none' }}\n        >\n          <ListItem button key={text}>\n            <ListItemIcon>\n              <Icon style={{ color: iconColor[index] }} key={text}>\n                {li[index]}\n              </Icon>\n            </ListItemIcon>\n            <ListItemText primary={text} style={{ color: 'white' }} />\n          </ListItem>\n        </Link>\n      ))}\n    </List>\n  );\n}\n\nLinks.propTypes = {};\n\nexport default Links;\n","/**\n *\n * Navigation\n *\n */\nimport React from 'react';\nimport clsx from 'clsx';\nimport {\n  makeStyles,\n  useTheme,\n  Icon,\n  Drawer,\n  CssBaseline,\n  AppBar,\n  Toolbar,\n  Typography,\n  IconButton,\n  Divider,\n} from '@material-ui/core';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport {\n  FaInstagram,\n  FaFacebookSquare,\n  FaGithubSquare,\n  FaLinkedin,\n  FaBars,\n} from 'react-icons/fa';\nimport Lists from '../Lists';\nconst drawerWidth = 240;\n\n// Style React Components\nconst useStyles = makeStyles(theme => ({\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n    backgroundColor: '#1A1A1A',\n    color: 'white',\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  },\n  brandName: {\n    fontSize: '26px',\n    textAlign: 'center',\n    width: '100%',\n    '@media(min-width: 600px)': {\n      fontSize: '30px',\n    },\n    fontFamily: 'Caveat, cursive',\n  },\n  divider: {\n    backgroundColor: 'grey',\n  },\n  social: {\n    padding: '10px',\n    display: 'flex',\n    textAlign: 'center',\n    width: '100%',\n  },\n}));\n\nconst socialColor = ['skyblue', 'pink', 'white', '#2867B2'];\nconst socialLink = [\n  'https://www.facebook.com/shahachal.32/',\n  'https://www.instagram.com/shah_achal/',\n  'https://github.com/AchalShah1006',\n  'https://www.linkedin.com/in/achalshah32/',\n];\nconst socialList = [\n  <FaFacebookSquare />,\n  <FaInstagram />,\n  <FaGithubSquare />,\n  <FaLinkedin />,\n];\n\nfunction Navigation() {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(false);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n  return (\n    <>\n      <CssBaseline />\n      <AppBar\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open,\n        })}\n      >\n        <Toolbar style={{ backgroundColor: '#1A1A1A' }}>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            className={clsx(classes.menuButton, open && classes.hide)}\n          >\n            <Icon style={{ color: 'white' }}>\n              <FaBars style={{ verticalAlign: 'top' }} />\n            </Icon>\n          </IconButton>\n          <Typography variant=\"h6\" noWrap className={classes.brandName}>\n            <span id=\"brand\"> Achal Shah</span>\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={open}\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        <div className={classes.drawerHeader}>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === 'ltr' ? (\n              <ChevronLeftIcon style={{ color: 'white' }} />\n            ) : (\n              <ChevronRightIcon style={{ color: 'white' }} />\n            )}\n          </IconButton>\n        </div>\n        <Divider className={classes.divider} />\n        <Lists />\n        <Divider className={classes.divider} />\n        <div className={classes.social}>\n          {socialList.map((text, index) => (\n            <a\n              href={socialLink[index]}\n              // eslint-disable-next-line react/jsx-no-target-blank\n              target=\"_blank\"\n              style={{ width: '25%' }}\n            >\n              <Typography\n                style={{ color: socialColor[index], fontSize: '24px' }}\n              >\n                {text}\n              </Typography>\n            </a>\n          ))}\n        </div>\n        <Divider className={classes.divider} />\n      </Drawer>\n    </>\n  );\n}\n\nNavigation.propTypes = {};\n\nexport default Navigation;\n","import React from 'react';\nimport { Box, Avatar } from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  FaHtml5,\n  FaCss3Alt,\n  FaJsSquare,\n  FaReact,\n  FaPython,\n} from 'react-icons/fa';\nimport src from '../../static/images/pp.jpg';\n\nconst header = 64;\n\nconst useStyle = makeStyles({\n  root: {\n    height: `calc(100% - ${header}px)`,\n    color: 'white',\n    textAlign: 'center',\n    position: 'relative',\n    backgroundColor: '#1A1A1A',\n  },\n  info: {\n    position: 'absolute',\n    top: '30%',\n    left: '50%',\n    width: '100%',\n    transform: 'translate(-50%, -30%)',\n    verticalAlign: 'middle',\n    padding: '5px',\n    fontSize: '24px',\n  },\n  svg: {\n    fontSize: '26px',\n    textAlign: 'left',\n    width: '70%',\n    margin: '0px auto',\n    '@media (min-width: 600px)': {\n      width: '50%',\n    },\n  },\n  icon: {\n    width: '20%',\n    cursor: 'pointer',\n  },\n  large: {\n    width: '120px',\n    height: '120px',\n    margin: '0.5rem auto',\n    border: '2px solid purple',\n    '@media(min-height: 400px)': {\n      width: '200px',\n      height: '200px',\n    },\n  },\n  text: {\n    fontFamily: 'cursive; sans-serif',\n    padding: '0.5rem 1rem',\n    fontSize: '18px',\n    '@media(min-width: 400px)': {\n      fontSize: '32px',\n    },\n  },\n});\nexport default function Home() {\n  const classes = useStyle();\n\n  return (\n    <Box className={classes.root}>\n      <div className={classes.info}>\n        <div style={{ margin: '0px auto' }}>\n          <Avatar alt=\"Achal Shah\" src={src} className={classes.large} />\n          <Typography className={classes.text}>Coder / Developer</Typography>\n          <Typography className={classes.svg}>\n            <FaHtml5 className={classes.icon} style={{ color: '#e44d26' }} />\n            <FaCss3Alt className={classes.icon} style={{ color: '#264de4' }} />\n            <FaJsSquare className={classes.icon} style={{ color: '#ffc300' }} />\n            <FaReact className={classes.icon} style={{ color: '#61dbfb' }} />\n            <FaPython className={classes.icon} style={{ color: 'green' }} />\n          </Typography>\n        </div>\n      </div>\n    </Box>\n  );\n}\n","/**\n *\n * Home\n *\n */\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport HomePage from '../../components/HomePage';\n\nconst useStyles = makeStyles(theme => ({\n  section: {\n    width: '100%',\n    height: '100vh',\n    backgroundColor: '#1A1A1A',\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  },\n}));\n\nexport default function Home() {\n  const classes = useStyles();\n  return (\n    <section\n      className={classes.section}\n      style={{ backgroundColor: 'transparent' }}\n    >\n      <div className={classes.drawerHeader} />\n      <HomePage />\n    </section>\n  );\n}\n","/**\n *\n * MyAbout\n *\n */\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\n// import Grid from '@material-ui/core/Grid';\n// import Typography from '@material-ui/core/Typography';\nimport { Link } from 'react-router-dom';\nimport Container from '@material-ui/core/Container';\nimport Button from '@material-ui/core/Button';\nimport {\n  FaMapMarkerAlt,\n  FaUniversity,\n  FaAddressCard,\n  FaEnvelope,\n} from 'react-icons/fa';\nimport { Avatar } from '@material-ui/core';\nimport src from '../../static/images/pp.jpg';\n\nconst header = 64;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: `calc(100% - ${header}px)`,\n  },\n  header: {\n    margin: theme.spacing(0),\n    fontSize: '30px',\n    fontWeight: 'bolder',\n    fontFamily: 'Forque',\n    '@media(min-width: 600px)': {\n      fontSize: '42px',\n      margin: theme.spacing(1),\n    },\n  },\n  grids: {\n    padding: theme.spacing(2),\n  },\n  avatar: {\n    width: '100%',\n    textAlign: 'center',\n    margin: '1rem auto',\n  },\n  img: {\n    height: 200,\n    width: 200,\n    display: 'inline-block',\n    padding: '5px',\n    backgroundColor: 'burlywood',\n    boxShadow: '5px 5px 10px 0px gray',\n  },\n  lists: {\n    padding: '3px 5px',\n    listStyle: 'none',\n    fontSize: '20px',\n  },\n  faIcons: {\n    margin: '0px 5px',\n    verticalAlign: 'text-top',\n  },\n  btn: {\n    margin: '0px 0.3rem',\n  },\n}));\n\nexport default function MyAbout() {\n  const classes = useStyles();\n\n  return (\n    <Container fixed className={classes.root}>\n      <div className={classes.avatar}>\n        <Avatar\n          src={src}\n          alt=\"Achal Shah\"\n          variant=\"square\"\n          className={classes.img}\n        />\n      </div>\n      <div>\n        <h1>I am Achal Shah.</h1>\n        <ul style={{ padding: '0px' }}>\n          <li className={classes.lists}>\n            <FaMapMarkerAlt className={classes.faIcons} /> Ahmedabad, India.\n          </li>\n          <li className={classes.lists}>\n            <FaAddressCard className={classes.faIcons} /> Currently pursing in\n            B.Tech as a computer engineer student.\n          </li>\n          <li className={classes.lists}>\n            <FaUniversity className={classes.faIcons} /> Gujarat Technical\n            University (GTU)\n          </li>\n          <li className={classes.lists}>\n            <FaEnvelope className={classes.faIcons} /> shahachal.007@gmail.com\n          </li>\n        </ul>\n      </div>\n      <div style={{ padding: '5px 10px', width: '100%' }}>\n        <Box\n          component=\"div\"\n          style={{ margin: '0px auto', width: 'max-content' }}\n        >\n          <Link\n            style={{ textDecoration: 'none', color: 'inherit' }}\n            to=\"/resume\"\n          >\n            <Button\n              className={classes.btn}\n              variant=\"outlined\"\n              color=\"secondary\"\n            >\n              Resume\n            </Button>\n          </Link>\n          <Button className={classes.btn} variant=\"outlined\" color=\"primary\">\n            Contact Me\n          </Button>\n        </Box>\n      </div>\n    </Container>\n  );\n}\n","/**\n *\n * Profile\n *\n */\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport About from '../../components/About';\n\nconst useStyles = makeStyles(theme => ({\n  section: {\n    width: '100%',\n    height: '100vh',\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  },\n}));\n\nexport default function Profile() {\n  const classes = useStyles();\n  return (\n    <section className={classes.section}>\n      <div className={classes.drawerHeader} />\n      <About />\n    </section>\n  );\n}\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles({\n  root: {\n    margin: '0.7rem auto',\n    maxWidth: '60%',\n    minWidth: 300,\n    minHeight: '320px',\n    '@media(min-width: 600px)': {\n      maxWidth: '50%',\n      minWidth: 400,\n    },\n  },\n  media: {\n    height: 200,\n  },\n  link: {\n    textDecoration: 'none',\n    color: 'inherit',\n  },\n});\n\nexport default function Projects(props) {\n  const classes = useStyles();\n\n  return (\n    <Card className={classes.root}>\n      <CardActionArea>\n        <CardMedia\n          className={classes.media}\n          image={props.img}\n          title=\"Contemplative Reptile\"\n        />\n        <CardContent>\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n            {props.title}\n          </Typography>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            {props.para}\n          </Typography>\n        </CardContent>\n      </CardActionArea>\n      <CardActions>\n        <Button size=\"small\" color=\"primary\">\n          <a href={props.view} target=\"_blank\" className={classes.link}>\n            View\n          </a>\n        </Button>\n      </CardActions>\n    </Card>\n  );\n}\n","/**\n *\n * Work\n *\n */\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Project from '../../components/Projects';\nimport bookstore from '../../static/images/Bookstore.png';\nimport covid19 from '../../static/images/covid19.png';\nimport chatbot from '../../static/images/aio-bot.png';\nimport portfolio from '../../static/images/portfolio.png';\nimport portfolio2 from '../../static/images/Portfolio-2.png';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  item: {\n    margin: '0px auto',\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  },\n}));\n\nexport default function Work() {\n  const classes = useStyles();\n  return (\n    <section className={classes.section}>\n      <div className={classes.drawerHeader} />\n      <Grid container className={classes.root}>\n        <Grid item xs className={classes.item}>\n          <Project\n            title=\"Portfolio\"\n            para=\"Portfolio created with Bootstrap.\"\n            img={portfolio}\n            view=\"https://achalshah1006.github.io/\"\n          />\n        </Grid>\n        <Grid item xs className={classes.item}>\n          <Project\n            title=\"BookStore\"\n            para=\"Bookstore with the varieties of book's for book lovers.\"\n            img={bookstore}\n            view=\"https://github.com/AchalShah1006/BookStore\"\n          />\n        </Grid>\n        <Grid item xs>\n          <Project\n            title=\"Covid 19 Tracker\"\n            para=\"Covid19 Tracker India.\"\n            img={covid19}\n            view=\"https://github.com/AchalShah1006/Covid19-Tracker-reactjs\"\n          />\n        </Grid>\n        <Grid item xs>\n          <Project\n            title=\"Chat-Bot\"\n            para=\"Chat Bot App to help user to get through the website.\"\n            img={chatbot}\n            view=\"https://github.com/AchalShah1006/Chatbot\"\n          />\n        </Grid>\n        <Grid item xs>\n          <Project\n            title=\"Portfolio\"\n            para=\"Portfolio with ReactJs and Material UI\"\n            img={portfolio2}\n          />\n        </Grid>\n        <Grid item xs>\n          <Project\n            title=\"Chat-Bot\"\n            para=\"Chat Bot App to help user to get through the website.\"\n          />\n        </Grid>\n      </Grid>\n    </section>\n  );\n}\n","/* eslint-disable react/prop-types */\n/**\n *\n * Cards\n *\n */\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\n// import CardActionArea from '@material-ui/core/CardActionArea';\nimport { Box, Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 200,\n    height: 300,\n    width: 250,\n    margin: '1rem auto',\n    '@media(min-width: 320px)': {\n      maxWidth: '90%',\n      height: 300,\n      width: 300,\n    },\n    '@media(min-width: 600px)': {\n      maxWidth: 345,\n      height: 300,\n      width: 600,\n    },\n  },\n  circle: {\n    margin: '0.5rem auto',\n    height: 150,\n    width: 150,\n    borderRadius: '50%',\n    border: '10px solid blue',\n    verticalAlign: 'middle',\n    textAlign: 'center',\n    '&:hover': {\n      backgroundColor: 'blue',\n      color: 'white',\n      border: '10px solid skyblue',\n    },\n  },\n  icon: {\n    '& > *':{\n      verticalAlign: 'middle',\n    },\n    fontSize: '80px',\n    height: '-webkit-fill-available',\n  },\n  typo: {\n    width: '100%',\n    fontFamily: 'Fira Sans, sans-serif',\n    margin: '1rem auto',\n    textAlign: 'center',\n    fontStyle: 'italic',\n    fontWeight: 'bolder',\n  },\n});\n\nexport default function Cards(props) {\n  const classes = useStyles();\n  return (\n    <Card className={classes.root}>\n      <Box component=\"div\" className={classes.circle}>\n        <span className={classes.icon}>{props.comp}</span>\n      </Box>\n      <h1 className={classes.typo}>{props.title}</h1>\n      <div>\n        <Typography style={{ fontSize: '18px' }} className={classes.typo}>\n          {props.code}\n        </Typography>\n      </div>\n    </Card>\n  );\n}\n","/**\n *\n * Skills\n *\n */\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\nimport {\n  FaCode,\n  FaDesktop,\n  FaLaptopCode,\n  FaBootstrap,\n  FaDatabase,\n  FaCloudUploadAlt,\n} from 'react-icons/fa';\nimport Cards from '../../components/Cards';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  item: {\n    margin: '0px auto',\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  },\n}));\n\nexport default function Skills() {\n  const classes = useStyles();\n  return (\n    <section className={classes.section}>\n      <div className={classes.drawerHeader} />\n      <Container fixed>\n        <Grid container className={classes.root}>\n          <Grid item xs className={classes.item}>\n            <Cards\n              comp={<FaDesktop />}\n              title=\"WEB DESIGN\"\n              code=\"HTML, CSS, JavaScript, ReactJs\"\n            />\n          </Grid>\n          <Grid item xs className={classes.item}>\n            <Cards\n              comp={<FaCode />}\n              title=\"WEB DEVELOPMENT\"\n              code=\"PHP, Flask, Django\"\n            />\n          </Grid>\n          <Grid item xs>\n            <Cards\n              comp={<FaBootstrap />}\n              title=\"UI FRAMEWORKS\"\n              code=\"Bootstrap, Material UI\"\n            />\n          </Grid>\n          <Grid item xs>\n            <Cards\n              comp={<FaLaptopCode />}\n              title=\"PROGRAMMING LANGUAGE\"\n              code=\"Python, C, CPP\"\n            />\n          </Grid>\n          <Grid item xs>\n            <Cards\n              comp={<FaDatabase />}\n              title=\"DATABASE\"\n              code=\"PSQL, MongoDB\"\n            />\n          </Grid>\n          <Grid item xs>\n            <Cards\n              comp={<FaCloudUploadAlt />}\n              title=\"CLOUD PLATFORMS\"\n              code=\"AWS, GCP\"\n            />\n          </Grid>\n        </Grid>\n      </Container>\n    </section>\n  );\n}\n","/**\n *\n * Resume\n *\n */\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n// import PropTypes from 'prop-types';\n// import styled from 'styled-components';\nimport { Document, Page } from 'react-pdf';\nimport Button from '@material-ui/core/Button';\n\nconst data =\n  '';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    margin: '1rem auto',\n    width: '100%',\n  },\n  btn: {\n    margin: '0.5rem auto',\n    display: 'block',\n  },\n  anchor: {\n    textDecoration: 'none',\n    color: 'inherit',\n  },\n  canvas: {\n    '& > *': {\n      margin: 'auto',\n    },\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  },\n}));\n\nfunction Resume() {\n  const classes = useStyles();\n  return (\n    <>\n      <div className={classes.drawerHeader} />\n\n      <div style={{ width: '100%' }}>\n        <Button className={classes.btn} variant=\"outlined\" color=\"primary\">\n          <a\n            className={classes.anchor}\n            href={`data:application/pdf;base64,${data}`}\n            download\n          >\n            Download\n          </a>\n        </Button>\n      </div>\n      <Document\n        className={classes.root}\n        file={`data:application/pdf;base64,${data}`}\n      >\n        <Page className={classes.canvas} pageNumber={1} />\n      </Document>\n    </>\n  );\n}\n\nResume.propTypes = {};\n\nexport default Resume;\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Navigation from './components/Navigation';\nimport Home from './containers/Home';\nimport Profile from './containers/Profile';\nimport Work from './containers/Work';\nimport Skills from './containers/Skills';\nimport Resume from './components/Resume';\n// Style React Components\nconst useStyles = makeStyles({\n  root: {\n    display: 'flex',\n    fontFamily: 'Fira Sans, sans-serif',\n  },\n\n  section: {\n    width: '100%',\n  },\n});\n\nexport default function PersistentDrawerLeft() {\n  const classes = useStyles();\n\n  return (\n    <Router>\n      <div className={classes.root}>\n        <Navigation />\n        <main className={classes.section}>\n          <Switch>\n            <Route exact path=\"/Portfolio-ReactJs/\" component={Home} />\n            <Route path=\"/Portfolio-ReactJs/profile\" component={Profile} />\n            <Route path=\"/Portfolio-ReactJs/skills\" component={Skills} />\n            <Route path=\"/Portfolio-ReactJs/work\" component={Work} />\n            <Route path=\"/Portfolio-ReactJs/resume\" component={Resume} />\n          </Switch>\n        </main>\n      </div>\n    </Router>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 57;","module.exports = __webpack_public_path__ + \"static/media/pp.165a1c65.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Bookstore.38a4d574.png\";","module.exports = __webpack_public_path__ + \"static/media/covid19.a3971ba7.png\";","module.exports = __webpack_public_path__ + \"static/media/aio-bot.e1c65422.png\";","module.exports = __webpack_public_path__ + \"static/media/portfolio.fa46615e.png\";"],"sourceRoot":""}